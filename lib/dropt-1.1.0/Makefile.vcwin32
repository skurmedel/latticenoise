# dropt Makefile for Microsoft nmake
#
# Written by James D. Lin and assigned to the public domain.
#
# The latest version of this file can be downloaded from:
# <http://www.taenarum.com/software/dropt/>

.SILENT:
.SUFFIXES:

!IFNDEF SRC_DIR
SRC_DIR = $(MAKEDIR)
!ENDIF

!IFNDEF BUILD_ROOT
BUILD_ROOT = $(SRC_DIR)\build
!ENDIF

# nmake doesn't support the special .PHONY target.  Create our own
# pseudo-target as a substitute.  Note that usage is backwards from .PHONY;
# use $(PHONY) as a dependency of pseudo-targets.
#
# (Assumes that there will never be an actual file named ".phony".)
#
PHONY = .phony

MKDIR_DEST = if not exist "$(@D:"=)\$(NULL)" md "$(@D:"=)"

CC = cl.exe
LINK = link.exe
LINKLIB = lib.exe

# /wd4100 disables a warning about unused function parameters.
CFLAGS = /EHsc /nologo /GF /Gy /GS /W4 /wd4100 /DSTRICT /DWIN32_LEAN_AND_MEAN
LINK_FLAGS = /NOLOGO /NXCOMPAT
LINKLIB_FLAGS = /NOLOGO

!IF "$(DYNAMIC_CRT)" != ""
CC_CRT_FLAG = /MD
!ELSE
CC_CRT_FLAG = /MT
!ENDIF

DEBUG_SUFFIX =
!IF "$(DEBUG)" != ""
DEBUG_SUFFIX = -debug
CFLAGS = $(CFLAGS) /Od /DDEBUG /RTC1 /Zi $(CC_CRT_FLAG)d /DDROPT_DEBUG_STRING_BUFFERS
LINK_FLAGS = $(LINK_FLAGS) /DEBUG
!ELSE
CFLAGS = $(CFLAGS) /Ox /DNDEBUG $(CC_CRT_FLAG)
LINK_FLAGS = $(LINK_FLAGS) /RELEASE /OPT:REF
!ENDIF

NO_STRING_SUFFIX =
!IF "$(DROPT_NO_STRING_BUFFERS)" != ""
NO_STRING_SUFFIX = -nostring
CFLAGS = $(CFLAGS) /DDROPT_NO_STRING_BUFFERS
!ENDIF

UNICODE_SUFFIX =
!IF "$(_UNICODE)" != ""
UNICODE_SUFFIX = -w
CFLAGS = $(CFLAGS) /D_UNICODE
!ENDIF

OUT_DIR = $(BUILD_ROOT)\lib$(DEBUG_SUFFIX)$(NO_STRING_SUFFIX)$(UNICODE_SUFFIX)
OBJ_DIR = $(BUILD_ROOT)\tmp$(DEBUG_SUFFIX)$(NO_STRING_SUFFIX)$(UNICODE_SUFFIX)

GLOBAL_DEP = "$(SRC_DIR)\dropt.h" "$(SRC_DIR)\dropt_string.h"
LIB_OBJ_FILES = "$(OBJ_DIR)\dropt.obj" "$(OBJ_DIR)\dropt_handlers.obj" "$(OBJ_DIR)\dropt_string.obj"
OBJ_FILES = $(LIB_OBJ_FILES) "$(OBJ_DIR)\dropt_example.obj" "$(OBJ_DIR)\test_dropt.obj"

DROPT_LIB = "$(OUT_DIR)\dropt.lib"
DROPTXX_LIB = "$(OUT_DIR)\droptxx.lib"
EXAMPLE_EXE = "$(OBJ_DIR)\dropt_example.exe"
TEST_EXE = "$(OBJ_DIR)\test_dropt.exe"


# Targets --------------------------------------------------------------

default: $(PHONY) lib libxx
all: $(PHONY) default example test
lib: $(PHONY) $(DROPT_LIB)
libxx: $(PHONY) $(DROPTXX_LIB)


example: $(PHONY)

!IF "$(DROPT_NO_STRING_BUFFERS)" != ""
example: skip_example
!ELSEIF "$(_UNICODE)" != ""
example: skip_example
!ELSE
example: $(EXAMPLE_EXE)
!ENDIF

skip_example: $(PHONY)
    @echo.(Skipping dropt_example because either DROPT_NO_STRING_BUFFERS or _UNICODE was specified.)


check: $(PHONY) test
test: $(PHONY) $(TEST_EXE)
    @echo.Running tests...
    $(TEST_EXE) $(TEST_DROPT_ARGS)
    @echo.Tests passed.


$(DROPT_LIB): $(LIB_OBJ_FILES)
$(DROPTXX_LIB): $(DROPT_LIB) "$(OBJ_DIR)\droptxx.obj"

$(DROPT_LIB) $(DROPTXX_LIB):
    $(MKDIR_DEST)
    $(LINKLIB) /OUT:$@ $(LINKLIB_FLAGS) $**

$(EXAMPLE_EXE) $(TEST_EXE): "$(OBJ_DIR)\$(@B:"=).obj" $(DROPT_LIB)
    $(MKDIR_DEST)
    $(LINK) /SUBSYSTEM:CONSOLE /OUT:$@ $(LINK_FLAGS) $**

$(OBJ_FILES): "$(SRC_DIR)\$(@B:"=).c" $(GLOBAL_DEP)
"$(OBJ_DIR)\droptxx.obj": "$(SRC_DIR)\$(@B:"=).cpp" "$(SRC_DIR)\$(@B:"=).hpp" $(GLOBAL_DEP)

$(OBJ_FILES) "$(OBJ_DIR)\droptxx.obj":
    $(MKDIR_DEST)
    $(CC) /c /Fo"$(OBJ_DIR)\\" /Fd"$(OBJ_DIR)\\" $(CFLAGS) %s


# Special targets ------------------------------------------------------

.phony:

clean: $(PHONY)
    -if exist "$(BUILD_ROOT)\$(NULL)" rd /s /q "$(BUILD_ROOT)"
